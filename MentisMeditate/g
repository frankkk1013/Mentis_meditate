diff --git a/MentisMeditate.xcodeproj/project.pbxproj b/MentisMeditate.xcodeproj/project.pbxproj
index 4e6b71e..88561db 100644
--- a/MentisMeditate.xcodeproj/project.pbxproj
+++ b/MentisMeditate.xcodeproj/project.pbxproj
@@ -7,6 +7,12 @@
 	objects = {
 
 /* Begin PBXBuildFile section */
+		FB612E0E27BBA20D0097C63C /* Journey.swift in Sources */ = {isa = PBXBuildFile; fileRef = FB612E0D27BBA20D0097C63C /* Journey.swift */; };
+		FB612E1127BBA7320097C63C /* CardView.swift in Sources */ = {isa = PBXBuildFile; fileRef = FB612E1027BBA7320097C63C /* CardView.swift */; };
+		FB612E1327BBA7770097C63C /* DetailTextView.swift in Sources */ = {isa = PBXBuildFile; fileRef = FB612E1227BBA7770097C63C /* DetailTextView.swift */; };
+		FB612E1527BBA7E40097C63C /* Source.swift in Sources */ = {isa = PBXBuildFile; fileRef = FB612E1427BBA7E40097C63C /* Source.swift */; };
+		FB612E1827BBB2690097C63C /* StepperView in Frameworks */ = {isa = PBXBuildFile; productRef = FB612E1727BBB2690097C63C /* StepperView */; };
+		FB612E1F27BBC7FD0097C63C /* Background_music.swift in Sources */ = {isa = PBXBuildFile; fileRef = FB612E1E27BBC7FC0097C63C /* Background_music.swift */; };
 		FB992BC527B65C4E0028D07B /* MentisMeditateApp.swift in Sources */ = {isa = PBXBuildFile; fileRef = FB992BC427B65C4E0028D07B /* MentisMeditateApp.swift */; };
 		FB992BC727B65C4E0028D07B /* ContentView.swift in Sources */ = {isa = PBXBuildFile; fileRef = FB992BC627B65C4E0028D07B /* ContentView.swift */; };
 		FB992BC927B65C4F0028D07B /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = FB992BC827B65C4F0028D07B /* Assets.xcassets */; };
@@ -16,6 +22,11 @@
 /* End PBXBuildFile section */
 
 /* Begin PBXFileReference section */
+		FB612E0D27BBA20D0097C63C /* Journey.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Journey.swift; sourceTree = "<group>"; };
+		FB612E1027BBA7320097C63C /* CardView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CardView.swift; sourceTree = "<group>"; };
+		FB612E1227BBA7770097C63C /* DetailTextView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DetailTextView.swift; sourceTree = "<group>"; };
+		FB612E1427BBA7E40097C63C /* Source.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Source.swift; sourceTree = "<group>"; };
+		FB612E1E27BBC7FC0097C63C /* Background_music.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Background_music.swift; sourceTree = "<group>"; };
 		FB992BC127B65C4E0028D07B /* MentisMeditate.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = MentisMeditate.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		FB992BC427B65C4E0028D07B /* MentisMeditateApp.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MentisMeditateApp.swift; sourceTree = "<group>"; };
 		FB992BC627B65C4E0028D07B /* ContentView.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContentView.swift; sourceTree = "<group>"; };
@@ -30,12 +41,31 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				FB612E1827BBB2690097C63C /* StepperView in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
+		FB612E0F27BBA6FB0097C63C /* Journey_content */ = {
+			isa = PBXGroup;
+			children = (
+				FB612E1027BBA7320097C63C /* CardView.swift */,
+				FB612E1227BBA7770097C63C /* DetailTextView.swift */,
+				FB612E1427BBA7E40097C63C /* Source.swift */,
+			);
+			path = Journey_content;
+			sourceTree = "<group>";
+		};
+		FB612E1D27BBC7DD0097C63C /* Background_musicf */ = {
+			isa = PBXGroup;
+			children = (
+				FB612E1E27BBC7FC0097C63C /* Background_music.swift */,
+			);
+			path = Background_musicf;
+			sourceTree = "<group>";
+		};
 		FB992BB827B65C4E0028D07B = {
 			isa = PBXGroup;
 			children = (
@@ -55,8 +85,11 @@
 		FB992BC327B65C4E0028D07B /* MentisMeditate */ = {
 			isa = PBXGroup;
 			children = (
+				FB612E1D27BBC7DD0097C63C /* Background_musicf */,
+				FB612E0F27BBA6FB0097C63C /* Journey_content */,
 				FB992BDF27B6821E0028D07B /* maria-nazionale-1.jpg */,
 				FB992BC427B65C4E0028D07B /* MentisMeditateApp.swift */,
+				FB612E0D27BBA20D0097C63C /* Journey.swift */,
 				FB992BDD27B6636B0028D07B /* SnapCarousel.swift */,
 				FB992BC627B65C4E0028D07B /* ContentView.swift */,
 				FB992BC827B65C4F0028D07B /* Assets.xcassets */,
@@ -89,6 +122,9 @@
 			dependencies = (
 			);
 			name = MentisMeditate;
+			packageProductDependencies = (
+				FB612E1727BBB2690097C63C /* StepperView */,
+			);
 			productName = MentisMeditate;
 			productReference = FB992BC127B65C4E0028D07B /* MentisMeditate.app */;
 			productType = "com.apple.product-type.application";
@@ -117,6 +153,9 @@
 				Base,
 			);
 			mainGroup = FB992BB827B65C4E0028D07B;
+			packageReferences = (
+				FB612E1627BBB2690097C63C /* XCRemoteSwiftPackageReference "StepperView" */,
+			);
 			productRefGroup = FB992BC227B65C4E0028D07B /* Products */;
 			projectDirPath = "";
 			projectRoot = "";
@@ -144,9 +183,14 @@
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				FB612E0E27BBA20D0097C63C /* Journey.swift in Sources */,
+				FB612E1F27BBC7FD0097C63C /* Background_music.swift in Sources */,
 				FB992BDE27B6636B0028D07B /* SnapCarousel.swift in Sources */,
 				FB992BC727B65C4E0028D07B /* ContentView.swift in Sources */,
+				FB612E1527BBA7E40097C63C /* Source.swift in Sources */,
 				FB992BC527B65C4E0028D07B /* MentisMeditateApp.swift in Sources */,
+				FB612E1327BBA7770097C63C /* DetailTextView.swift in Sources */,
+				FB612E1127BBA7320097C63C /* CardView.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -349,6 +393,25 @@
 			defaultConfigurationName = Release;
 		};
 /* End XCConfigurationList section */
+
+/* Begin XCRemoteSwiftPackageReference section */
+		FB612E1627BBB2690097C63C /* XCRemoteSwiftPackageReference "StepperView" */ = {
+			isa = XCRemoteSwiftPackageReference;
+			repositoryURL = "https://github.com/badrinathvm/StepperView.git";
+			requirement = {
+				kind = upToNextMajorVersion;
+				minimumVersion = 1.0.0;
+			};
+		};
+/* End XCRemoteSwiftPackageReference section */
+
+/* Begin XCSwiftPackageProductDependency section */
+		FB612E1727BBB2690097C63C /* StepperView */ = {
+			isa = XCSwiftPackageProductDependency;
+			package = FB612E1627BBB2690097C63C /* XCRemoteSwiftPackageReference "StepperView" */;
+			productName = StepperView;
+		};
+/* End XCSwiftPackageProductDependency section */
 	};
 	rootObject = FB992BB927B65C4E0028D07B /* Project object */;
 }
diff --git a/MentisMeditate/Background_musicf/Background_music.swift b/MentisMeditate/Background_musicf/Background_music.swift
new file mode 100644
index 0000000..abeb341
--- /dev/null
+++ b/MentisMeditate/Background_musicf/Background_music.swift
@@ -0,0 +1,32 @@
+//
+//  Background_music.swift
+//  MentisMeditate
+//
+//  Created by Francesco Iaccarino on 15/02/22.
+//
+
+import SwiftUI
+
+struct Background_music: View {
+    @State var tapped: Bool = false
+    var body: some View {
+
+        List{
+            Text("hello")
+            Text("hello")
+            Text("hello")
+            Text("hello")
+            //da inserire for each
+            
+        }
+        .navigationBarTitle(Text("Playlist"))
+        .navigationBarBackButtonHidden(false)
+        .navigationBarTitleDisplayMode(.inline)
+    }
+}
+
+struct Background_music_Previews: PreviewProvider {
+    static var previews: some View {
+        Background_music()
+    }
+}
diff --git a/MentisMeditate/Journey.swift b/MentisMeditate/Journey.swift
new file mode 100644
index 0000000..009452c
--- /dev/null
+++ b/MentisMeditate/Journey.swift
@@ -0,0 +1,124 @@
+//
+//  Journey.swift
+//  MentisMeditate
+//
+//  Created by Francesco Iaccarino on 15/02/22.
+//
+
+import SwiftUI
+
+struct Journey: View {
+    @State var isProfileShow = false
+    @State var counter: CGFloat = 0;
+    @ObservedObject var control = CardView_Control()
+    
+    
+    var body: some View {
+        //        NavigationView {
+        
+        
+        VStack{
+            TabView{
+                
+                    ScrollView{
+                        TopMenu(isProfileShow: $isProfileShow)
+                            .padding()
+                            .padding(.bottom, -10)
+                        
+                        VStack(alignment:.leading){
+                            CardView(subtitle: "hello", title: "prova", backgroundImage: Image("Image"), briefSummary: "idk", description: "boh")
+                                .environmentObject(self.control)
+                            
+                        }.padding()
+                    }.tabItem {
+                        Image(systemName: "leaf.fill")
+                        Text("Home")
+                    }
+                    
+                        
+
+                    Text("Background Music")
+                        .font(.system(size: 30, weight: .bold, design: .rounded))
+                        .tabItem {
+                            Image(systemName: "headphones")
+                            Text("Sounds")
+                        }
+
+                    Text("Stati")
+                        .font(.system(size: 30, weight: .bold, design: .rounded))
+                        .tabItem {
+                            Image(systemName: "scale.3d")
+                            Text("Statistics")
+                        }
+                
+                
+
+                
+            }
+                        
+//            TabView{
+//
+//            }
+        }
+
+        
+        
+        
+        
+        
+        
+        
+        
+        //            .navigationBarHidden(control.anyTriggered)
+        //                .navigationBarTitle("") //Set title to none so that it won't put the bottom title
+        //                .navigationBarItems(leading:
+        //                                        //This is your made up title, put in the leading view so it is up top aligned with the plus button
+        //                                    Text("Journey").font(.largeTitle).bold()
+        //                                    //This is the plus button, on the right side, aka trailing view
+        //                                    , trailing: Button(action: {
+        //
+        //                }, label: {
+        //                    Image(systemName: "gyroscope").foregroundColor(.indigo)
+        //                })
+        //                )
+        
+        //Aggiungere TAB
+    }
+    //    }
+}
+
+struct TopMenu: View {
+    @Binding var isProfileShow: Bool
+    
+    var body: some View {
+        VStack(alignment: .leading) {
+            //            Text("WED, JULY 31")
+            //                .font(.caption)
+            //                .padding(.bottom, -10)
+            //                .foregroundColor(.gray)
+            
+            HStack(alignment: .center) {
+                Text("Journey")
+                    .font(.largeTitle)
+                    .fontWeight(.bold)
+                
+                Spacer()
+                
+                Button(action: { self.isProfileShow.toggle() }) {
+                    Image(systemName: "gyroscope")
+                        .resizable()
+                        .frame(width: 30, height: 30)
+                        .foregroundColor(.indigo)
+                }
+            }
+        }
+        
+    }
+}
+
+
+struct Journey_Previews: PreviewProvider {
+    static var previews: some View {
+        Journey()
+    }
+}
diff --git a/MentisMeditate/Journey_content/CardView.swift b/MentisMeditate/Journey_content/CardView.swift
new file mode 100644
index 0000000..c94aeac
--- /dev/null
+++ b/MentisMeditate/Journey_content/CardView.swift
@@ -0,0 +1,222 @@
+//
+//  CardView.swift
+//  CardView-SwiftUI
+//
+//  Created by Quentin on 2019/7/31.
+//  Copyright © 2019 TotoroQ. All rights reserved.
+//
+
+import SwiftUI
+import Combine
+import StepperView
+@available(iOS 13.0, OSX 10.15, tvOS 13.0, watchOS 6.0, *)
+struct IndicatorImageView: View {
+    var name:String
+    var body: some View {
+        ZStack {
+            Circle()
+                .foregroundColor(Color.white)
+                .overlay(Image(name)
+                            .resizable()
+                            .frame(width: 30, height: 30))
+                .frame(width: 40, height: 40)
+        }
+        
+    }
+}
+
+@available(iOS 13.0, OSX 10.15, tvOS 13.0, watchOS 6.0, *)
+struct CustomStepTextView: View {
+    var text:String
+    var body: some View {
+        VStack {
+            TextView(text: text, font: Font.system(size: 16, weight: Font.Weight.regular))
+                .foregroundColor(Color.black)
+                .frame(maxWidth: .infinity, alignment: .leading)
+                .offset(x: -15)
+        }
+    }
+}
+
+
+    
+
+class CardView_Control: ObservableObject {
+    @Published var anyTriggered = false
+}
+
+struct CardView: View {
+    var subtitle: String
+    var title: String
+    var backgroundImage: Image
+    var briefSummary: String
+    var description: String
+    
+    @State var isShowDetail = false
+    @EnvironmentObject var control: CardView_Control
+    
+    var body: some View {
+        GeometryReader { geo in
+            CardInnerView(subtitle: self.subtitle, title: self.title, backgroundImage: self.backgroundImage, briefSummary: self.briefSummary, description: self.description, isShow: self.$isShowDetail)
+                .onTapGesture {
+                    withAnimation(.interpolatingSpring(mass: 1, stiffness: 90, damping: 15, initialVelocity: 1)) {
+                        self.isShowDetail.toggle()
+                        self.control.anyTriggered.toggle()
+                }
+            }
+            .clipShape(RoundedRectangle(cornerRadius: 30, style: .continuous))
+            .offset(x: self.isShowDetail ? -geo.frame(in: .global).minX : 0, y: self.isShowDetail ? -geo.frame(in: .global).minY : 0)
+            .frame(height: self.isShowDetail ? UIScreen.main.bounds.height : nil)
+            .frame(width: self.isShowDetail ? UIScreen.main.bounds.width : nil)
+        }
+        .frame(width: UIScreen.main.bounds.width - 40)
+        .frame(height: 300)
+        .offset(x: control.anyTriggered && !isShowDetail ? UIScreen.main.bounds.width : 0)
+        .opacity(control.anyTriggered && !isShowDetail ? 0 : 1)
+    }
+}
+
+
+#if DEBUG
+struct CardView_Previews: PreviewProvider {
+    static var previews: some View {
+        Group {
+            CardView(subtitle: "MEET THE DEVELOPER", title: "Insider VSCO's Imaging Lab", backgroundImage: Image("bg1"), briefSummary: "How VSCO brings analog authenticity to your digital shots", description: desPlaceholer, isShowDetail: false)
+            .environmentObject(CardView_Control())
+            
+//            CardView(subtitle: "MEET THE DEVELOPER", title: "Insider VSCO's Imaging Lab", backgroundImage: Image("bg1"), briefSummary: "How VSCO brings analog authenticity to your digital shots", description: desPlaceholer, isShowDetail: true)
+//
+//            TopView(subtitle: "MEET THE DEVELOPER", title: "Insider VSCO's Imaging Lab", backgroundImage: Image("bg1"), briefSummary: "How VSCO brings analog authenticity to your digital shots")
+//                .background(Color.black)
+        }
+    }
+}
+#endif
+
+struct CardInnerView: View {
+    var subtitle: String
+    var title: String
+    var backgroundImage: Image
+    var briefSummary: String
+    var description: String
+    
+    @Binding var isShow: Bool
+    @State private var translation = CGSize.zero
+    
+    var body: some View {
+        GeometryReader { geo in
+            VStack {
+                TopView(subtitle: self.subtitle, title: self.title, backgroundImage: self.backgroundImage, briefSummary: self.briefSummary, isShow: self.$isShow)
+                    .frame(height: 300)
+                    .background(
+                        self.backgroundImage
+                            .resizable()
+                            .aspectRatio(contentMode: .fill)
+                            .frame(maxWidth: geo.size.width, maxHeight: geo.size.height)
+                            .clipShape(RoundedRectangle(cornerRadius: 30, style: .continuous))
+                    )
+                    .offset(y: self.translation.height)
+                
+                if self.isShow {
+                    ScrollView {
+                        ExpandableView(description: self.description, isShow: self.$isShow)
+                            .transition(.opacity)
+                    }
+                }
+            }
+            .background(Color.white)
+        }
+    }
+}
+
+struct TopView: View {
+    var subtitle: String
+    var title: String
+    var backgroundImage: Image
+    var briefSummary: String
+    
+    @Binding var isShow: Bool
+    
+    var body: some View {
+        GeometryReader { geo in
+            VStack(alignment: .center, spacing: 0) {
+                if self.isShow {
+                    Rectangle()
+                        .frame(height: UIApplication.shared.windows.first?.safeAreaInsets.top)
+                        .frame(maxWidth: .infinity)
+                        .foregroundColor(Color.clear)
+                        .onTapGesture {
+                            print(geo.safeAreaInsets.top)
+                        }
+                }
+                
+                HStack {
+                    VStack(alignment: .leading) {
+                        Text(self.subtitle)
+                            .font(.caption)
+                            .foregroundColor(.gray)
+                            .lineLimit(1)
+                        
+                        Text(self.title)
+                            .font(.headline)
+                            .foregroundColor(.white)
+                            .lineLimit(2)
+                    }
+                    
+                    Spacer()
+                }
+                .padding()
+                
+                Spacer()
+                
+                
+                HStack(alignment: .center) {
+                    
+                    Text(self.briefSummary)
+                        .foregroundColor(.white)
+                        .font(.caption)
+                        .lineLimit(3)
+                    
+                    Spacer()
+                }
+                .padding()
+            }
+        }
+    }
+}
+
+struct ExpandableView: View {
+    var description: String
+    
+    @Binding var isShow: Bool
+    let cells = [ CustomStepTextView(text: "Basic Details"),
+                  CustomStepTextView(text: "Company Details"),
+                  CustomStepTextView(text: "Subscription plan"),
+                  CustomStepTextView(text: "Payment details")
+    ]
+    
+    //Custom Indicators to point.
+    let indicators = [
+        StepperIndicationType.custom(Image(systemName:"1.square.fill").font(.largeTitle).foregroundColor(.indigo).eraseToAnyView()),
+        StepperIndicationType.custom(Image(systemName:"2.square.fill").font(.largeTitle).foregroundColor(.indigo).eraseToAnyView()),
+        StepperIndicationType.custom(Image(systemName:"3.square.fill").font(.largeTitle).foregroundColor(.indigo).eraseToAnyView()),
+        StepperIndicationType.custom(Image(systemName:"4.square.fill").font(.largeTitle).foregroundColor(.indigo).eraseToAnyView())
+    ]
+    
+    var body: some View {
+        VStack{
+            Text(self.description)
+                .font(.body)
+                .foregroundColor(.black)
+                .padding()
+            StepperView()
+                    .addSteps(cells)
+                    .indicators(indicators)
+                    .stepIndicatorMode(StepperMode.vertical)
+                    .spacing(30)
+                    .lineOptions(StepperLineOptions.rounded(4, 8, Color.indigo))
+                    .stepLifeCycles([StepLifeCycle.completed, .completed, .pending, .pending])
+                    .padding(.all)
+        }.padding(.all)
+    }
+}
diff --git a/MentisMeditate/Journey_content/DetailTextView.swift b/MentisMeditate/Journey_content/DetailTextView.swift
new file mode 100644
index 0000000..4133023
--- /dev/null
+++ b/MentisMeditate/Journey_content/DetailTextView.swift
@@ -0,0 +1,27 @@
+//
+//  DetailTextView.swift
+//  CardView-SwiftUI
+//
+//  Created by Quentin on 2019/7/31.
+//  Copyright © 2019 TotoroQ. All rights reserved.
+//
+
+import SwiftUI
+
+struct DetailTextView: View {
+    var description: String
+    
+    var body: some View {
+        Text(description)
+            .foregroundColor(.black)
+            .lineLimit(nil)
+    }
+}
+
+#if DEBUG
+struct DetailTextView_Previews: PreviewProvider {
+    static var previews: some View {
+        DetailTextView(description: desPlaceholer)
+    }
+}
+#endif
diff --git a/MentisMeditate/Journey_content/Source.swift b/MentisMeditate/Journey_content/Source.swift
new file mode 100644
index 0000000..5261caf
--- /dev/null
+++ b/MentisMeditate/Journey_content/Source.swift
@@ -0,0 +1,26 @@
+//
+//  Source.swift
+//  CardView-SwiftUI
+
+
+import Foundation
+import SwiftUI
+
+struct Card : Identifiable {
+    var id = UUID()
+    
+    var subtitle = "MEET THE DEVELOPER"
+    var title = "Insider VSCO's Imaging Lab"
+    var backgroundImage =  "bg1"
+    var briefSummary = "How VSCO brings analog authenticity to your digital shots"
+    var description = desPlaceholer
+}
+
+let desPlaceholer = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Enim eu turpis egestas pretium aenean pharetra magna ac. Quis enim lobortis scelerisque fermentum. Phasellus faucibus scelerisque eleifend donec pretium. Nec ullamcorper sit amet risus nullam eget. Convallis convallis tellus id interdum velit. A erat nam at lectus urna duis convallis convallis tellus. Id ornare arcu odio ut sem nulla pharetra diam sit. Cum sociis natoque penatibus et magnis. Viverra accumsan in nisl nisi scelerisque eu ultrices. Et netus et malesuada fames ac turpis egestas integer. Montes nascetur ridiculus mus mauris vitae ultricies leo. Sed felis eget velit aliquet sagittis id consectetur. Ac tortor dignissim convallis aenean et.\nEt malesuada fames ac turpis egestas maecenas. Lorem donec massa sapien faucibus et molestie. Arcu non odio euismod lacinia at quis risus sed. Est ullamcorper eget nulla facilisi etiam dignissim diam. Vitae suscipit tellus mauris a diam maecenas. Leo duis ut diam quam nulla. Id diam maecenas ultricies mi. Viverra ipsum nunc aliquet bibendum enim facilisis gravida neque. Convallis tellus id interdum velit laoreet id donec. Neque convallis a cras semper auctor. Porta lorem mollis aliquam ut porttitor leo. Eget arcu dictum varius duis at consectetur. Orci sagittis eu volutpat odio. Nunc id cursus metus aliquam eleifend mi in nulla posuere. Adipiscing diam donec adipiscing tristique risus. Arcu risus quis varius quam quisque id diam. Viverra maecenas accumsan lacus vel facilisis. Eget aliquet nibh praesent tristique magna sit amet.\nSagittis aliquam malesuada bibendum arcu vitae elementum curabitur vitae. Id cursus metus aliquam eleifend mi in nulla posuere sollicitudin. Vestibulum lectus mauris ultrices eros in. Sapien eget mi proin sed libero enim. Sit amet commodo nulla facilisi nullam. Feugiat scelerisque varius morbi enim nunc. Blandit libero volutpat sed cras ornare arcu dui. Vitae justo eget magna fermentum iaculis. Quis lectus nulla at volutpat. Ante in nibh mauris cursus mattis molestie a iaculis. Volutpat lacus laoreet non curabitur. Natoque penatibus et magnis dis parturient montes nascetur ridiculus mus. In hac habitasse platea dictumst vestibulum. At volutpat diam ut venenatis tellus in metus vulputate eu. Curabitur vitae nunc sed velit dignissim sodales ut. At in tellus integer feugiat scelerisque varius morbi enim. Arcu bibendum at varius vel pharetra vel turpis nunc eget. Sit amet venenatis urna cursus eget nunc scelerisque.\nOrci porta non pulvinar neque laoreet suspendisse. Consectetur a erat nam at lectus urna duis. Ut pharetra sit amet aliquam id diam. Tellus cras adipiscing enim eu turpis. Viverra orci sagittis eu volutpat odio facilisis. Suspendisse sed nisi lacus sed viverra tellus in hac. Nunc mi ipsum faucibus vitae aliquet nec ullamcorper sit amet. Scelerisque eleifend donec pretium vulputate sapien nec sagittis aliquam. Mauris sit amet massa vitae tortor. Fermentum dui faucibus in ornare quam viverra orci sagittis. Maecenas pharetra convallis posuere morbi leo urna molestie. Magna fringilla urna porttitor rhoncus. Ornare arcu odio ut sem nulla pharetra diam. Sit amet risus nullam eget felis eget nunc lobortis mattis.\nNec tincidunt praesent semper feugiat. Elementum curabitur vitae nunc sed velit dignissim sodales. Auctor elit sed vulputate mi sit amet mauris commodo. Volutpat maecenas volutpat blandit aliquam etiam erat. Sed viverra tellus in hac habitasse. Mauris rhoncus aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque. Non diam phasellus vestibulum lorem. Quis ipsum suspendisse ultrices gravida dictum fusce. Risus nullam eget felis eget nunc lobortis mattis aliquam. Sit amet nisl suscipit adipiscing bibendum est. Sit amet venenatis urna cursus eget nunc scelerisque viverra mauris. Ut eu sem integer vitae justo eget magna fermentum. Egestas sed tempus urna et. Varius quam quisque id diam vel quam elementum pulvinar etiam. Cursus turpis massa tincidunt dui ut ornare lectus sit amet. Vel pretium lectus quam id leo in vitae. Euismod nisi porta lorem mollis aliquam ut porttitor leo a."
+
+let cardData: [Card] = [
+    .init(),
+    .init(),
+    .init(),
+    .init()
+]
diff --git a/MentisMeditate/SnapCarousel.swift b/MentisMeditate/SnapCarousel.swift
index ff3ffa5..c000b0c 100644
--- a/MentisMeditate/SnapCarousel.swift
+++ b/MentisMeditate/SnapCarousel.swift
@@ -69,8 +69,8 @@ struct SheetView: View {
             .font(.title)
             .padding()
             .background(Color.black)
-            .navigationBarTitle("EXAWER", displayMode: .large)
-        }
+            
+        }.navigationBarTitle("EXAWER", displayMode: .large)
         
     }
 }
@@ -85,10 +85,10 @@ struct SnapCarousel: View {
         let cardHeight: CGFloat = 450
         
         let items = [
-            Card(id: 0, name: "EXAWER"),
-            Card(id: 1, name: "RISE AND SHINE"),
-            Card(id: 2, name: "Lets"),
-            Card(id: 3, name: "Go")
+            Card_Carousel(id: 0, name: "EXAWER"),
+            Card_Carousel(id: 1, name: "RISE AND SHINE"),
+            Card_Carousel(id: 2, name: "Lets"),
+            Card_Carousel(id: 3, name: "Go")
         ]
         
         return Canvas {
@@ -120,7 +120,7 @@ struct SnapCarousel: View {
     }
 }
 
-struct Card: Decodable, Hashable, Identifiable {
+struct Card_Carousel: Decodable, Hashable, Identifiable {
     var id: Int
     var name: String = ""
 }
